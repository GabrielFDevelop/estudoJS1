        // Anotações das Aulas de JavaScript \\

    -- Aula 1 - O que o JavaScript é capaz de fazer? --

Um Website é formado normalmente por 3 tecnologias: HTML, CSS e JavaScript. Nos quais o HTML se trata do conteúdo, o CSS se trata da estilização deste conteúdo e o JavaScript se trata da interação do conteúdo.

______________________________________________________________________________________________________________________________________________________________________________________________________________________________________

    -- Aula 2 - JavaScript: como chegamos até aqui? --

Durante a guerra fria utilizavam a Arpanet, que, aos poucos foi se tornando a Internet.

______________________________________________________________________________________________________________________________________________________________________________________________________________________________________

    -- Aula 3 - Dando os primeiros passos --

Só se aprende a programar, praticando! E normalmente pra quem está iniciando, surgem algumas dúvidas: 

-"sou velho/novo demais pra programar?"
Não, não existe idade mínima ou máxima para qualquer tipo de aprendizado no mundo.


* Livros recomendados: 'JavaScript: O guia definitivo' por David Flanagan e 
'JavaScript:Guia do programador.' por Maujor. Além das referências da Mozilla(developer.mozilla.org) e 
ECMA(ecma-international.org). *

______________________________________________________________________________________________________________________________________________________________________________________________________________________________________

    -- Aula 4 - Criando seu primeiro script --

Ao utilizar 'html:5' o próprio vscode irá criar um código HTML5. -->

LINHA 30 ATÉ 33:
        confirm('Está gostando de JS?');/* Os botões 'ok' quanto 'cancelar' não me retornam nada, pra onde vão os dados? 
        - esse dado simplesmente se perdeu, pois não havia onde guardá-lo.*/
        prompt('Qual seu nome?');/* Apesar de ter digitado e confirmado, pra onde vai o dado inserido? 
        - esse dado simplesmente se perdeu, pois não havia onde guardá-lo.*/

______________________________________________________________________________________________________________________________________________________________________________________________________________________________________

    -- Aula 5 - Variáveis e Tipos Primitivos --

Ao utilizar 'html:5' o próprio vscode irá criar um código HTML5.

Nesta aula será ensinado como 'guardar' os dados para que possamos utilizá-los mais pra frente. -->

Durante a aula, ele cita um exemplo de estacionamento com vagas a1(para carros normais), c1(para caminhões) e m1(para motos).
Usando esse exemplo pra explicar sobre variáveis ele nos mostra o seguinte:

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<IMPORTANTE>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

Nunca leia o sinal '=' como igual, e sim como recebe.Por exemplo: 'vaga a1 = carro1;' vaga a1 recebe carro1.

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

Ele colocar um carro na vaga a1:

vaga a1 = carro1;

Após isso ele quer colocar outro carro nela, mas precisa tirar o 'carro1' da vaga, ficando assim:

vaga a1 = carro2;

Caso queira deixar a vaga sem carro nenhum, seria assim:

vaga a1 = null;

Nos computadores também têm essas 'vagas', mas elas estão em um 'terreno' que seria a memória do computador. E assim como foi 
feito nos terrenos, é preciso ter espaços delimitados para receber os dados. Esses espaços seriam as variáveis, que podemos 
representar com 'var' ou 'let'(let é mais utilizado no mais moderno). Essas vagas(variáveis) precisam de um 
identificador(nome da variável) e também precisamos atribuir valores a elas, sendo: 'n1 = 5', 'n2 = 8.5', 'n3 = 15'. Ficando assim:

let n1 = 5;
let n2 = 8.5;
let n3 = 15;

É possível criar variáveis com tamanhos diferentes, para receber dados com tamanhos maiores ou menores. Por exemplo:

s1 = "JavaScript";
s2 = 'CursoEmVideo';
s3 = `Guanabara`;

Os identificadores(nomes de variável) podem começar com uma letra, $ ou _. Não podem começar com números. É possível utilizar 
letras e números. É possivel utilizar acentos e símbolos. Não podem conter espaços. Não podem ser palavras reservadas.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>estudoJS1</title>
    <style>
        body{
            background-color: darkblue;
            color: white;
            font: normal 20pt Arial;
        }
        h1{
            color: bisque;
        }
    </style>
</head>
<body>
    <h1>Olá mundo!</h1>
    <p>Já me livrei da maldição.</p>
    <script>
        alert('Minha primeira mensagem!');
        confirm('Está gostando de JS?');
        prompt('Qual seu nome?');
    </script>
</body>
</html> 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

______________________________________________________________________________________________________________________________________________________________________________________________________________________________________

    -- Aula 6 - Tratamento de Dados -- Parte 1

Nessa aula começaremos a trabalhar também a manipulação de dados na Linguagem JavaScript.

Em JavaScript temos vários tipos primitivos que podem ser:
-string;
-number;
-boolean;
-null;
-undefined;
-object;
-function;

Mas tem alguns que são considerados principais: 'string', 'number' e 'boolean'.

E nesta aula iremos tratar principalmente de: 'string' e 'number'.

Manipularemos e criaremos o 'prompt' criado na linha 25. Iremos criar uma variável para receber o dado inserido no 'prompt' que
ficou assim:

        let nome = prompt('Qual seu nome?');

Dessa forma a variável nome recebe o valor inserido no prompt(que transmite ao usuário a mensagem 'Qual seu nome?'). Assim terei
'nome' como uma variável, e todo dado inserido no 'prompt' será guardado na variável 'nome'.

Criaremos um 'alert' para exibir uma mensagem ao usuário após ele apresentar seu nome. E ficará assim:

        alert('Prazer em te conhecer,' + nome + '!');


<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<IMPORTANTE>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

Normalmente em HTML, CSS e JavaScript temos que comentar de formas diferentes:

-HTML: <!--    -->
-CSS: /*   */
-JavaScript: //     e     /*   */

E o símbolo '+' em JavaScript significa concatenação.

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>estudoJS1</title>
    <style>
        body{
            background-color: darkblue;
            color: white;
            font: normal 20pt Arial;
        }
        h1{
            color: bisque;
        }
    </style>
</head>
<body>
    <h1>Olá mundo!</h1>
    <p>Já me livrei da maldição.</p>
    <script>
        let nome = prompt('Qual seu nome?');
        alert('Prazer em te conhecer,' + nome + '!');
    </script>
</body>
</html>
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    -- Aula 6 - Tratamento de Dados -- Parte 2

Nesta parte da aula, precisaremos que a pessoa digite 2 números, e precisaremos de 2 'prompt'. Para isso criaremos 2 variáveis:
        let n1 = prompt('Digite o primeiro número');
        let n2 = prompt('Digite o segundo número');

Após, criaremos também, uma variável que fará a soma dos valores das outras 2:
        let s = n1 + n2;

Mas não irá funcionar por conta do '+' que também serve para concatenação do código. Então como dizer pro código que n1 e n2 
são números? Teremos de converter essas variáveis de string para número utilizando o 'Number.parseInt(n)' ou
 o 'Number.parseFloat' para números reais e não inteiros. Podendo transformá-los diretamente, que ficaria assim:
        let n1 = Number.parseInt(prompt('Digite o primeiro número'));
        let n2 = parseInt(prompt('Digite o segundo número'));

Ou para caso eu queira aque seja real:
        let n1 = Number.parseFloat(prompt('Digite o primeiro número'));
        let n2 = parseFloat(prompt('Digite o segundo número'));

Também podemos deixar como se quiséssemos que o JavaScript decida se será real ou inteiro, esta é uma forma de ser feito que
foi implementada mais recentemente, facilitando para os desenvolvedores, e ficaria assim:
        let n1 = Number(prompt('Digite o primeiro número'));
        let n2 = Number(prompt('Digite o segundo número'));

Se quiser também é possível transformar um 'number' em 'string', utilizando 'String("o que deseja transformar em string")' ou 
'"o que deseja transformar em string".toString()', das seguintes formas:
        let n1 = String(prompt('Digite o primeiro número'));
        let n2 = prompt('Digite o segundo número').toString();

Também há várias formar de formatar um string:

let s = 'JavaScript';
-'Estou aprendendo s'; //não faz interpolação
-'Estou aprendendo' + s; //utiliza concatenação
-`Estou aprendendo ${s}`; //utiliza template string(forma mais recente e prática)

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<IMPORTANTE>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

O 'prompt' por padrão te retornará uma string.

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>estudoJS1</title>
    <style>
        body{
            background-color: darkblue;
            color: white;
            font: normal 20pt Arial;
        }
        h1{
            color: bisque;
        }
    </style>
</head>
<body>
    <h1>Olá mundo!</h1>
    <p>Já me livrei da maldição.</p>
    <script>
        let n1 = Number.parseInt(prompt('Digite o primeiro número'));
        let n2 = parseInt(prompt('Digite o segundo número'));
        let s = n1 + n2;
        alert(`A soma entre ${n1} e ${n2} é igual a ${s}`);
    </script>
</body>
</html>
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    -- Aula 6 - Tratamento de Dados -- Parte 2

Utilizando o "'identificador da variável'.length" ele te retorna quantas letras tem a string. Também podemos usar 
o "'identificador da variável'.toUpperCase()" que transforma todas as letras da string em maiúsculas e o
 "'identificador da variável'.toLowerCase()" que transforma todas as letras da string em minúsculas: 
        document.write(`Olá, ${nome}! Seu nome tem ${nome.length} letras.`);
        document.write(`Seu nome em maiúsculas fica ${nome.toUpperCase()}`);
        document.write(`Seu nome em minúsculas fica ${nome.toLowerCase()}`);

Da mesma forma que fizemos com string, podemos fazer com nuber e formatá-lo com o "'identificador da variável'.toFixed()":
let n1 = 1543.5;
n1.toFixed(2); //irá retornar n1 = 1545.50;

E nele, digamos que n1 é o salário de alguém, como faria esse valor se tornar um valor financeiro? É só fazer dessa forma:
        n1.toLocaleString('pt-br', {style: 'currency: 'BRL'}) // que retornará 'R$1,545,50'

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<IMPORTANTE>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

O number, como padrão te retornará um ponto e não uma vírgula antes da casa decimal, para substituir o ponto pela vírgula, faça:
n1.toFixed(2).replace('.' , ',');

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>estudoJS1</title>
    <style>
        body{
            font: normal 20pt Arial;
        }
    </style>
</head>
<body>
    <script>
        let nome = prompt('Qual seu nome?');
        document.write(`Olá, ${nome}! Seu nome tem ${nome.length} letras.`);
        document.write(`Seu nome em maiúsculas fica ${nome.toUpperCase()}`);
        document.write(`Seu nome em minúsculas fica ${nome.toLowerCase()}`);
    </script>
</body>
</html>
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
______________________________________________________________________________________________________________________________________________________________________________________________________________________________________

    -- Aula 7 - Operadores(Parte 1) --

Os operadores tem várias famílias, mas iremos focar nas seguintes: aritméticos, atribuição, relacionais, lógicos e ternários.Nesta aula em específico iremos focar
 em apenas dois, os aritméticos e os de atribuição.
Começando pelos aritméticos, os que utilizamos em JavaScript são: +(soma), -(subtração), *(multiplicação), /(divisão), %(resto), **(ao quadrado).

______________________________________________________________________________________________________________________________________________________________________________________________________________________________________

    -- Aula 8 - Operadores(Parte 2) --

Nesta aula aprenderemos sobre os outros 3 operadores restantes: relacionais, lógicos e ternário.

Os relacionais participam da grande maioria das linguagens de programação, por exemplo: >(maior), <(menor), >=(maior ou igual), <=(menor ou igual), ==(igual),
 !=(diferente). Normalmente trabalhamos com eles de forma boolean, afirmando se sim(true) ou se não(false).

Os lógicos no JavaScript são apenas três: !(negação), &&(conjunção ou e), ||(disjunção e ou). Normalmente trabalhamos com eles também de forma boolean, afirmando 
 se sim(true) ou se não(false).

Os ternários em JavaScript é composto por apenas dois símbolos que são utilizados em uma mesma expressão, que são: ?, :. Eles são chamados de ternários 
por terem três partes:
        teste ? true : false

-O teste é como ele mesmo diz, é um teste lógico que irá nos retornar algum resultado. 
-O true é o que vai acontecer caso o teste lógico for verdadeiro.
-O false é o que vai acontecer caso o teste lógico for falso.

______________________________________________________________________________________________________________________________________________________________________________________________________________________________________

    -- Aula 9 - Introdução ao DOM --

Nesta aula aprenderemos sobre o DOM. DOM é um acrônimo para Document Object Model, que basicamente é um conjunto de objetos dentro do navegador que vai dar acesso aos componentes internos do website. E algo que se deve 
 aprender é a fazer a ávore DOM do seu site, que começa da raiz dentro do navegador que é chamada de window, significando que tudo que estamos fazendo em JavaScript está dentro desta window.
Dentro da window temos vários outros objetos como location(que diz a localização do site), document(que é o documento atual), history(que basicamente seria o histórico) e vários outros.
Nós também temos os elementos, que podemos selecionar através de métodos de acesso: por Marca, por ID, por Nome, por Classe, por Seletor.
    -por Marca: getElementByTagName();
    -por ID: getElementByID();
    -por Nome: getElementByName();
    -por Classe: getElementByClassName();
    -por Seletor: querySelector() ou querySelectorAll();

Ao Utilizarmos o "querySelector()" com Classes usamos um '.' na div e se for um Id usamos um '#'.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Introdução ao DOM</title>
    <style>
        body{
            background: black;
            color: aliceblue;
            font: normal 20pt Arial;
        }
    </style>
</head>
<body>
    <h1>Iniciando estudos com DOM</h1>
    <p>Aqui vai o resultado</p>
    <p>Aprendendo a usar <strong>DOM</strong> em JavaScript</p>
    <div class="msg">Clique em mim</div>
    <script>
        let corpo = window.document.body;
        let p1 = document.getElementsByTagName('p')[1];
        /*let d = document.getElementById('msg');
        d.style.background = 'green';
        d.innerText = 'Estou aguardando...';*/
        let d = document.querySelector('div.msg');
        d.style.color = 'blue';
    </script>
</body>
</html>

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
______________________________________________________________________________________________________________________________________________________________________________________________________________________________________

    -- Aula 10 - Eventos DOM --

Nesta aula veremos sobre os eventos que ocorrem no DOM. Criamos uma 'div' e nela verificaremos sobre o uso de alguns eventos. Por exemplo eventos de mouse como:
    - mouseenter: quando o mouse entra na 'div' ele dispara o evento;
    - mousemove: quando o mouse se move dentro da 'div' ele dispara o evento;
    - mousedown: quando clico e pressiono o botão do mouse na 'div' ele dispara o evento;
    - mouseup: quando solto o click do botão do mouse na 'div' ele dispara o evento;
    - click: quando faço o clique simples no botão do mouse na 'div' ele dispara o evento;
    - mouseout: quando tiro o mouse da 'div' ele dispara o evento;

Ao solicitar um evento tenho que registrá-lo num bloco em JavaScript e esse bloco é registrado como uma 'function' e para este evento funcionar, eu tenho que dar um nome para esta função assim: 'function apertar(){}' .
Opcionalmente você também pode colocar um parâmetro nessa função, entre os parênteses.
Para dizer ao JavaScript para ler o evento utilizamos o "'variável'.addEventListener('função', função)"

Fonte da lista de eventos: https://developer.mozilla.org/en-US/docs/Web/Events

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        CÓDIGO 1

<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Eventos DOM</title>
    <style>
        div#area{
            font: normal 20pt Arial;
            background: green;
            color: white;
            width: 200px;
            height: 200px;
            line-height: 200px;
            text-align: center;
        }
    </style>
</head>
<body>
    <div id="area">
        Interaja...
    </div>

    <script>
        let a = document.querySelector('div#area');
        a.addEventListener('click', clicar);
        a.addEventListener('mouseenter', entrar);
        a.addEventListener('mouseout', sair);
        function clicar() {
            a.innerText = 'Clicou!';
            a.style.background = 'red';
        }
        function entrar() {
            a.innerText = 'Entrou!';
        }
        function sair() {
            a.innerText = 'Saiu!';
            a.style.background = 'green';
        }
    </script>
</body>
</html>

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Agora faremos outro código em HTML no qual se baseia em uma calculadora básica. Nele declararemos três 'input', dois para texto e um para botão. No JavaScript do HTML teremos 5 variáveis: duas para receber o valor 
dos 'input', sendo elas: 'tn1' e 'tn2'. E outras duas para receber o valor de 'tn1' e 'tn2' para transformá-los em números/number(pois quando colocamos algo no imput, recebemos como texto/string), sendo elas: 'n1' e 'n2'.
Uma para realizarmos a soma: 's'.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

        CÓDIGO 2

<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Somando Números</title>
    <style>
        body{
            font: normal 18pt Arial;
        }
        input{
            font: normal 18pt Arial;
            width: 100px;
        }
        div#res{
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <h1>Somando Valores</h1>
    <input type="number" name="txtn1" id="txtn1"> + 
    <input type="number" name="txtn2" id="txtn2">
    <input type="button" value="Somar" onclick="somar()">
    <div id="res">Resultado</div>
    <script>
        function somar() {
            let tn1 = document.getElementById('txtn1');
            let tn2 = document.querySelector('input#txtn2');
            let res = document.querySelector('div#res');
            let n1 = Number(tn1.value);
            let n2 = Number(tn2.value);
            let s = n1 + n2;
            res.innerHTML = `A soma entre ${n1} e ${n2} é igual a <strong>${s}</strong>`;
        }
    </script>
</body>
</html>

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
______________________________________________________________________________________________________________________________________________________________________________________________________________________________________

    -- Aula 11 - Condições(Parte 1) --

Nesta aula falaremos sobre condições em JavaScript. Mas antes falaremos sobre códigos sequenciais, seriam códigos que seguem um fluxo, no quais os comandos devem ser executados em uma ordem lógica, em sequência. Códigos 
condicionais são códigos nos quais te apresentam 2 tipos de caminhos em um certo ponto, e podem continuar a execução após isso. Por exemplo: se acontecer isso, faça isso. Se não, faça aquilo. 
Para representar essa condição utilizamos o 'if'(condição, que significaria 'se') e 'else'(que significaria 'se não'). Neste primeiro código faremos uma condição simples.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

        CÓDIGO 1

let vel = 78.2;
console.log(`A velocidade do carro é ${vel}km/h`);
if(vel > 60){
    console.log(`Voce estava acima da velocidade permitida. MULTADO!`);
}
console.log(`Dirija sempre usando cinto de segurança`); 

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Agora faremos um código condicional composto.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

let pais = 'EUA';
console.log(`Vivendo em ${pais}`);

if(pais == 'Brasil'){
    console.log(`Você é Brasileiro`);
}else{
    console.log(`Você é Estrangeiro`);
};

// let pais = 'EUA';
// console.log(`Vivendo em ${pais}`);

// if(pais != 'Brasil'){
//     console.log(`Você é Estrangeiro`);
// }else{
//     console.log(`Você é Brasileiro`);
// };

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

E agora ficaria assim com outro exemplo em forma de site:

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DETRAN</title>
</head>
<body>
    <h1>Sistema de multas.</h1>
    Velocidade do carro: <input type="number" name="txtvel" id="txtvel">
    <input type="button" value="Verificar" onclick="calcular()">
    <div id="res"></div>
    <script>
        function calcular() {
            let txtv = document.querySelector('input#txtvel');
            let res = document.querySelector('div#res');
            let vel = Number(txtv.value);
            res.innerHTML = `<p>Sua velocidade atual é de <strong>${vel}km/h</p></strong>`;
            if(vel > 60){
                res.innerHTML += `Você está <strong>multado</strong> por exesso de velocidade!`
            }
            res.innerHTML += `Dirija sempre usando cinto de segurança`;
        }
    </script>
</body>
</html>

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

______________________________________________________________________________________________________________________________________________________________________________________________________________________________________

    -- Aula 12 - Condições (Parte 2) --

Nesta aula veremos sobre condições aninhadas, nas quais podemos colocar condições dentro de outras condições. Em condições aninhadas podemos utilizar o 'else if' no qual nos traz mais variedades de utilização de condições
em JavaScript, e para utilizá-lo, será assim:

if(cond1){
    bloco 1;
}else{
    if(cond2){
        bloco2;
    }else{
        bloco3;
    }
}

Ou, simplificando, também podemos fazer assim:

if(cond1){
    bloco 1;
}else if(cond2){
    bloco2;
}else{
    bloco3;
}

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

    CÓDIGO 1

let idade = 67;

console.log(`Você tem ${idade} anos.`);

if (idade < 16){
    console.log(`Não vota.`);
}else if(idade>=16 && idade<18 || idade>65){
        console.log(`Voto opcional.`);
}else{
    console.log(`Voto obrigatório.`);
}

ou

let agora = new Date();
let hora = agora.getHours();

if (hora >=6 && hora <12){
    console.log(`Bom dia! Agora são exatamente ${hora} horas.`);
}else if(hora >= 12 && hora<18){
    console.log(`Boa tarde! Agora são exatamente ${hora} horas.`);
}else if(hora >=18 && hora<24){
    console.log(`Boa noite! Agora são exatamente ${hora} horas.`);
}else if(hora >=0 && hora<6){
    console.log(`É madrugada! Agora são exatamente ${hora} horas.`);
}else{
    console.log(`Hora ${hora} não existente.`);
}

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

E também temos as condições múltiplas, nas quais servem para valores fixos podendo nãosomente utilizar somente sim ou não. Nela, utilizamos o comando 'switch(expressão)' do JavaScript, assim:
    switch(expressão){
        case 'valor 1':     ;
        break;
        case 'valor 2':     ;
        break;
        case 'valor 3':     ;
        break;
        default:    ;
        break;
    }

Neste comando 'switch', dentro de cada bloco preciso utilizar o comando 'break', pois ele vai ser desviado para o fim do fluxo, caso contrário, ele executará o fluxo inteiro antes de finaliza podendo te retornar valores
 que não deseja..

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<IMPORTANTE>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

Podemos declarar a hora atual do seu sistema operacional com 'new Date()'. E fazer a variável receber esta hora com "'variável'.getHours()". Ficaria assim:
    let agora = new Date();
    let hora = agora.getHours();

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

______________________________________________________________________________________________________________________________________________________________________________________________________________________________________